@{
    Layout = null;
    var fechaSeleccionada = ViewBag.FechaSeleccionada != null ? (DateTime)ViewBag.FechaSeleccionada : DateTime.Now;
    var diasDelMes = DateTime.DaysInMonth(fechaSeleccionada.Year, fechaSeleccionada.Month);
    var primerDiaMes = new DateTime(fechaSeleccionada.Year, fechaSeleccionada.Month, 1);
    var diaSemanaPrimerDia = (int)primerDiaMes.DayOfWeek;

    @model List<TareaViewModel>

}
<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendario</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <style>
        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        .content {
            flex-grow: 1;
        }

        footer {
            position: absolute;
            bottom: 0;
            width: 100%;
            background-color: #162a6a;
            color: white;
        }

        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 10px;
            padding: 20px;
        }

        .day {
            background-color: #f2f2f2;
            padding: 10px;
            min-height: 100px;
            border-radius: 10px;
            position: relative;
            font-weight: bold;
        }

        .day-header {
            text-align: center;
            font-weight: bold;
            padding: 5px;
            background-color: #e0e0e0;
        }

        .task {
            background-color: #e0e7ff;
            border: 1px solid #3b82f6;
            color: #1e3a8a;
            padding: 2px 6px;
            font-size: 12px;
            border-radius: 4px;
            margin-top: 4px;
        }

        .day-outside-month {
            background-color: #f9f9f9;
            color: #aaa;
        }

        .current-day {
            background-color: #d4e6ff;
            border: 2px solid #3b82f6;
        }

        .navigation-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .btn-navigation {
            background-color: #162a6a;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
        }

            .btn-navigation:hover {
                background-color: #1a3a8a;
                color: white;
            }

        .month-title {
            font-size: 1.5rem;
            font-weight: bold;
            color: #162a6a;
        }
    </style>
</head>
<body>
    <div class="d-flex justify-content-between align-items-center flex-wrap p-3">
        <div class="d-flex align-items-center">
            <div class="p-2" style="width: 80px; max-width: 100%; flex-shrink: 0;">
                <a href="@Url.Action("Index", "Home")" class="text-decoration-none">
                    <img src="\img\timely_logo.png" class="img-fluid" alt="Timely Logo">
                </a>
            </div>
            <div class="p-2">
                <h1 class="mt-2 text-center text-sm-start">TIMELY</h1>
            </div>
        </div>

        <div class="p-2">
            <img src="\img\user.png" alt="Usuario" style="width: 45px; height: 45px; object-fit: cover; border-radius: 50%;">
        </div>
    </div>
    <div class="container">
        <div class="d-flex justify-content-center align-items-center">
            <h2 class="fw-bold">Calendario</h2>
        </div>

        <div class="navigation-container">
            <div class="d-flex align-items-center">
                <a href="@Url.Action("Calendario", new { fecha = fechaSeleccionada.AddMonths(-1) })"
                   class="btn btn-navigation me-2">← Mes Anterior</a>
                <span class="month-title mx-3">@fechaSeleccionada.ToString("MMMM yyyy")</span>
                <a href="@Url.Action("Calendario", new { fecha = fechaSeleccionada.AddMonths(1) })"
                   class="btn btn-navigation ms-2">Mes Siguiente →</a>
            </div>
        </div>

        <div class="calendar">
            @{
                var diasSemana = new[] { "Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado" };
                foreach (var dia in diasSemana)
                {
                    <div class="day-header">@dia</div>
                }

                // Espacios vacíos para días del mes anterior
                for (int i = 0; i < diaSemanaPrimerDia; i++)
                {
                    <div class="day day-outside-month"></div>
                }

                // Días del mes actual
                for (int dia = 1; dia <= diasDelMes; dia++)
                {
                    var fechaActual = new DateTime(fechaSeleccionada.Year, fechaSeleccionada.Month, dia);
                    var esHoy = fechaActual.Date == DateTime.Now.Date;

                    <div class="day @(esHoy ? "current-day" : "")">
                        @dia
                        @foreach (var tarea in Model.Where(t => t.FechaLimite.HasValue && t.FechaLimite.Value.Date == fechaActual.Date))
                        {
                            <div class="task">@tarea.Descripcion</div>
                        }
                    </div>
                }
            }
        </div>
    </div>
</body>
</html>