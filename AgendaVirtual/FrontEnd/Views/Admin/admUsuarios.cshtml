@model FrontEnd.Models.UserViewModel

@{
    ViewData["Title"] = "AdminUsuarios";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Usuarios - Timely</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        .content {
            flex-grow: 1;
        }

        footer {
            position: absolute;
            bottom: 0;
            width: 100%;
            background-color: #162a6a;
            color: white;
        }

        .icon-container {
            text-align: center;
        }

            .icon-container img {
                max-width: 100%;
                height: auto;
                width: 20px;
                margin: 0 10px;
            }

        table {
            width: 100%;
            margin-top: 20px;
            border-collapse: separate;
            border-spacing: 0 10px;
        }

        .tab-container {
            display: flex;
            justify-content: flex-start;
            margin-bottom: 20px;
            align-items: center;
        }

        .tab {
            display: inline-block;
            text-align: center;
            margin-right: 50px;
        }

            .tab h3 {
                margin-bottom: 0;
                position: relative;
                z-index: 2;
                font-size: 18px;
            }

        .tabs-line {
            display: block;
            width: 100%;
            height: 3px;
            background-color: #233671;
        }

        .tab.active-tab .tab-line {
            width: 100%;
            height: 6px;
            background-color: #233671;
        }

        .tab:not(.active-tab) .tab-line {
            display: none;
        }

        th {
            color: #233671;
        }

        tbody tr {
            background-color: #f2f2f2;
        }

        td, th {
            border: none;
            padding: 8px;
        }

        .actions {
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .actions img {
                width: 20px;
                height: auto;
                margin: 0 10px;
                cursor: pointer;
            }

        .tab img {
            width: 20px;
            height: auto;
            margin-left: 100px;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1050;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            width: 40%;
            padding: 20px;
            border-radius: 8px;
            max-height: 80vh;
            overflow-y: auto;
        }

        .modal-header {
            text-align: center;
            margin-bottom: 20px;
        }

            .modal-header h3 {
                font-size: 24px;
                color: #233671;
            }

        .modal-body {
            margin-bottom: 20px;
        }

            .modal-body .form-group {
                margin-bottom: 15px;
            }

                .modal-body .form-group input, 
                .modal-body .form-group select {
                    width: 100%;
                    padding: 10px;
                    border-radius: 5px;
                    border: 1px solid #ccc;
                }

        .modal-footer {
            text-align: center;
        }

            .modal-footer button {
                padding: 10px 15px;
                border-radius: 5px;
                font-size: 16px;
                cursor: pointer;
            }

        .btn-cancelar {
            background-color: white;
            color: #233671;
            border: 2px solid #233671;
        }

            .btn-cancelar:hover {
                background-color: #233671;
                color: white;
                border: 2px solid #233671;
            }

        .btn-crear {
            background-color: #233671;
            color: white;
            border: none;
        }

            .btn-crear:hover {
                background-color: #0056b3;
            }

        .error-message {
            color: red;
            font-size: 0.8em;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="d-flex flex-row mb-3 p-3 align-items-center flex-wrap">
        <div class="p-2" style="width: 80px; max-width: 100%; flex-shrink: 0;">
            <img src="\img\timely_logo.png" class="img-fluid" alt="Timely Logo">
        </div>

        <div class="p-2">
            <h1 class="mt-2 text-center text-sm-start">TIMELY</h1>
        </div>
    </div>

    <div class="container mt-5">
        <div class="tab-container">
            <div class="tab active-tab">
                <a href="@Url.Action("admUsuarios", "Admin")" style="text-decoration: none; color: inherit;">
                    <h3>Usuarios</h3>
                    <div class="tab-line"></div>
                </a>
            </div>
            <div class="tab">
                <a href="@Url.Action("admEquipos", "Admin")" style="text-decoration: none; color: inherit;">
                    <h3>Equipos</h3>
                    <div class="tab-line"></div>
                </a>
            </div>
            <div class="tab">
                <a href="@Url.Action("admTareas", "Admin")" style="text-decoration: none; color: inherit;">
                    <h3>Tareas</h3>
                    <div class="tab-line"></div>
                </a>
            </div>
            <button class="border-0" style="background:none" onclick="openModal('create')">
                <i class="bi bi-plus-circle text-lg fs-3 text-blue"></i>
            </button>
        </div>
        <hr class="linea-divisora">
        <table class="table" id="usuariosTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Correo Electrónico</th>
                    <th>Rol</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="usuariosTableBody">
                <!--se carga dinamicamente -->
            </tbody>
        </table>
    </div>

    <!-- Modal Crear Usuario -->
    <div class="modal" id="createModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Crear Usuario</h3>
            </div>
            <div class="modal-body">
                <form id="createUserForm" class="p-4 rounded bg-white">
                    <div class="form-group">
                        <label for="createUserName" class="control-label">Usuario</label>
                        <input id="createUserName" name="UserName" class="form-control rounded-3 border-1" style="border-color: #162a6a;" required />
                        <span class="text-danger" id="createUserNameError"></span>
                    </div>
                    <div class="form-group">
                        <label for="createEmail" class="control-label">Email</label>
                        <input id="createEmail" name="Email" type="email" class="form-control rounded-3 border-1" style="border-color: #162a6a;" required />
                        <span class="text-danger" id="createEmailError"></span>
                    </div>
                    <div class="form-group">
                        <label for="createPassword" class="control-label">Contraseña</label>
                        <input id="createPassword" name="Password" type="password" class="form-control rounded-3 border-1" style="border-color: #162a6a;" required />
                        <span class="text-danger" id="createPasswordError"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn-cancelar" onclick="closeModal('create')">Cancelar</button>
                <button class="btn-crear" onclick="crearUsuario()">Crear</button>
            </div>
        </div>
    </div>

    <!-- Modal Editar Usuario -->
    <div class="modal" id="editModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Editar Usuario</h3>
            </div>
            <div class="modal-body">
                <form id="editUserForm" class="p-4 rounded bg-white">
                    <input type="hidden" id="editIdUsuario">
                    <div class="form-group">
                        <label for="editUserName" class="control-label">Usuario</label>
                        <input id="editUserName" name="UserName" class="form-control rounded-3 border-1" style="border-color: #162a6a;" required />
                        <span class="text-danger" id="editUserNameError"></span>
                    </div>
                    <div class="form-group">
                        <label for="editEmail" class="control-label">Email</label>
                        <input id="editEmail" name="Email" type="email" class="form-control rounded-3 border-1" style="border-color: #162a6a;" required />
                        <span class="text-danger" id="editEmailError"></span>
                    </div>
                    <div class="form-group">
                        <label for="editRol" class="control-label">Rol</label>
                        <select id="editRol" name="Rol" class="form-control rounded-3 border-1" style="border-color: #162a6a;">
                            <option value="Administrador">Administrador</option>
                            <option value="Usuario">Usuario</option>
                        </select>
                        <span class="text-danger" id="editRolError"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn-cancelar" onclick="closeModal('edit')">Cancelar</button>
                <button class="btn-crear" onclick="actualizarUsuario()">Guardar</button>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        function openModal(modalType) {
            document.getElementById(modalType + 'Modal').style.display = 'flex';
        }

        function closeModal(modalType) {
            document.getElementById(modalType + 'Modal').style.display = 'none';
        }

        $(document).ready(function() {
            cargarUsuarios();
        });

        function cargarUsuarios() {
            $.ajax({
                url: '@Url.Action("GetUsuarios", "Admin")',
                type: 'GET',
                success: function(usuarios) {
                    var tbody = $('#usuariosTableBody');
                    tbody.empty();

        usuarios.forEach(function(usuario) {
            var row = `<tr>
                <td>${usuario.idUsuario}</td>
                <td>${usuario.nombre}</td>
                <td>${usuario.correo}</td>
                <td>${usuario.rol}</td>
                <td class="actions">
                                <img src="/img/editar.png" alt="Editar"
                                     onclick="editarUsuario(${usuario.idUsuario}, '${usuario.nombre}', '${usuario.correo}', '${usuario.rol}')"
                                     style="cursor:pointer; width:20px; margin-right:10px;" />

                                <form onsubmit="return confirm('¿Estás seguro de eliminar a ${usuario.nombre}?')"
                                      action="@Url.Action("admUsuarios", "Admin")"
                                      method="post"
                                      class="d-inline">
                                    <input type="hidden" name="id" value="${usuario.idUsuario}" />
                                     @Html.AntiForgeryToken()
                                    <button type="submit" class="bg-transparent border-0">
                                        <img src="/img/eliminar.png" alt="Eliminar"
                                             style="cursor:pointer; width:20px;" />
                                    </button>
                                </form>
                            </td>
            </tr>`;
            tbody.append(row);
        });
                },
                error: function(xhr) {
                    console.error("Error al cargar usuarios:", xhr.responseText);
                }
            });
        }

        function crearUsuario() {
            var formData = {
                UserName: $('#createUserName').val(),
                Email: $('#createEmail').val(),
                Password: $('#createPassword').val()
            };

            $.ajax({
                url: '@Url.Action("crear", "Admin")',
                type: 'POST',
                data: formData,
                success: function() {
                    closeModal('create');
                    $('#createUserForm')[0].reset();
                    cargarUsuarios();
                },
                error: function(xhr) {
                    if (xhr.status === 400) {
                        var errors = xhr.responseJSON;
                        $('#createUserNameError').text(errors.UserName ? errors.UserName[0] : '');
                        $('#createEmailError').text(errors.Email ? errors.Email[0] : '');
                        $('#createPasswordError').text(errors.Password ? errors.Password[0] : '');
                    }
                }
            });
        }

        function editarUsuario(id, nombre, correo, rol) {
            $('#editIdUsuario').val(id);
            $('#editUserName').val(nombre);
            $('#editEmail').val(correo);
            $('#editRol').val(rol);
            openModal('edit');
        }

        function actualizarUsuario() {
            var formData = {
                IdUsuario: parseInt($('#editIdUsuario').val()),
                UserName: $('#editUserName').val(),
                Email: $('#editEmail').val(),
                Rol: $('#editRol').val()
            };

            $.ajax({
                url: '@Url.Action("UpdateUsuario", "Admin")',
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function(response) {
                    closeModal('edit');
                    cargarUsuarios();
                    $('#editUserNameError').text('');
                    $('#editEmailError').text('');
                    $('#editRolError').text('');
                },
                error: function(xhr) {
                    if (xhr.status === 400) {
                        try {
                            var errors = JSON.parse(xhr.responseText);
                            $('#editUserNameError').text(errors.UserName ? errors.UserName[0] : '');
                            $('#editEmailError').text(errors.Email ? errors.Email[0] : '');
                            $('#editRolError').text(errors.Rol ? errors.Rol[0] : '');
                        } catch (e) {
                            console.error("Error al parsear respuesta:", e);
                        }
                    }
                }
            });
        }

        function eliminarUsuario(id, nombre) {
            if (confirm(`¿Estás seguro de eliminar al usuario ${nombre}?`)) {
                const $icono = $(`i[onclick*="eliminarUsuario(${id}"]`);
                $icono.replaceWith('<i class="bi bi-trash-fill text-danger"><span class="spinner-border spinner-border-sm"></span></i>');

                $.ajax({
                    url: '@Url.Action("DeleteUsuario", "Admin")/' + id,
                    type: 'DELETE',
                    success: function(response) {
                        if (response.Success) {
                            cargarUsuarios();
                            alert(response.Message);
                        } else {
                            alert(response.Message || "No se pudo eliminar el usuario");
                        }
                    },
                    error: function(xhr) {
                        let errorMsg = "Error al eliminar: ";

                        if (xhr.status === 404) {
                            errorMsg += "El usuario ya no existe";
                            cargarUsuarios(); 
                        } else {
                            try {
                                const errorResponse = JSON.parse(xhr.responseText);
                                errorMsg += errorResponse.Message || xhr.statusText;
                            } catch {
                                errorMsg += xhr.statusText;
                            }
                        }

                        alert(errorMsg);
                    },
                    complete: function() {
                        $icono.replaceWith(
                            `<i class="bi bi-trash-fill text-danger"
                              onclick="eliminarUsuario(${id}, '${nombre}')"></i>`
                        );
                    }
                });
            }
        }
    </script>
</body>
</html>